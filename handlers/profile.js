const { getUser } = require('../mongodb');
const { InlineKeyboard } = require('grammy');

async function handleProfile(ctx) {
  try {
    const user = await getUser(ctx.chat.id);
    if (!user) {
      await ctx.reply('–ü–æ—Ö–æ–∂–µ, —Ç—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω. –ü–æ–ø—Ä–æ–±—É–π /start!');
      return;
    }

    const profile = `üìã –¢–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å:\n` +
      `üïí –ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å: ${user.timezone || '-'}\n` +
      `üò¥ –í—Ä–µ–º—è –∑–∞—Å—ã–ø–∞–Ω–∏—è: ${user.bedtime || '-'}\n` +
      `‚òÄÔ∏è –í—Ä–µ–º—è –ø—Ä–æ–±—É–∂–¥–µ–Ω–∏—è: ${user.wakeupTime || '-'}\n` +
      `üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: ${user.notifications === true ? '–í–∫–ª—é—á–µ–Ω—ã' : '–í—ã–∫–ª—é—á–µ–Ω—ã'}`;

    const keyboard = new InlineKeyboard()
      .text('–ù–∞—Å—Ç—Ä–æ–∏—Ç—å', 'setup_profile');

    await ctx.reply(profile, { reply_markup: keyboard });
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –∫–æ–º–∞–Ω–¥—ã /profile:', error);
    await ctx.reply('–£–ø—Å... –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ üò•');
  }
}

module.exports = { handleProfile };