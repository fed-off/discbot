require('dotenv').config();
const { Bot, Composer } = require('grammy');
const { conversations, createConversation } = require('@grammyjs/conversations');
const { connectDB } = require('./mongodb');
const { handleStart } = require('./handlers/start');
const { handleProfile } = require('./handlers/profile');
const { settingsConversation } = require('./handlers/settings');

const bot = new Bot(process.env.BOT_API_KEY);

// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º conversations
bot.use(conversations());
bot.use(createConversation(settingsConversation));

// –ö–æ–º–∞–Ω–¥—ã
bot.command('start', handleStart);
bot.command('profile', handleProfile);

// –û–±—Ä–∞–±–æ—Ç–∫–∞ callback'–æ–≤
bot.on('callback_query:data', async (ctx) => {
  try {
    if (ctx.callbackQuery.data === 'setup_profile') {
      await ctx.answerCallbackQuery();
      await ctx.conversation.enter('settings');
    }
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ callback:', error);
    await ctx.reply('–£–ø—Å... –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ üò•');
  }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
bot.on('msg', async (ctx) => {
  await ctx.reply('–°–æ—Ä—è–Ω, —è –ø–æ–∫–∞ –Ω–µ –∑–Ω–∞—é, –∫–∞–∫ –Ω–∞ —ç—Ç–æ –æ—Ç–≤–µ—Ç–∏—Ç—å... üôÑ');
});

async function run() {
  await connectDB();
  bot.start();
  console.log('–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω');
}

run().catch(console.error);